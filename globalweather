{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPhOBtxpEibxp5S/xEH6x4t",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Hemapriya-RC/Hema-ranjith/blob/main/globalweather\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "F-3ZxYhg7Iul"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=pd.read_csv(\"/weather.csv\")"
      ],
      "metadata": {
        "id": "nErYXVZ18Gkz"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "x71bmSK9_PeI",
        "outputId": "9feaa275-ca62-4889-fae4-6e1b097c0cb6"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                country     location_name  latitude  longitude  \\\n",
              "0           Afghanistan             Kabul     34.52      69.18   \n",
              "1               Albania            Tirana     41.33      19.82   \n",
              "2               Algeria           Algiers     36.76       3.05   \n",
              "3               Andorra  Andorra La Vella     42.50       1.52   \n",
              "4                Angola            Luanda     -8.84      13.23   \n",
              "5   Antigua and Barbuda      Saint John's     17.12     -61.85   \n",
              "6             Argentina      Buenos Aires    -34.59     -58.67   \n",
              "7               Armenia           Yerevan     40.18      44.51   \n",
              "8             Australia          Canberra    -35.28     149.22   \n",
              "9               Austria            Vienna     48.20      16.37   \n",
              "10           Azerbaijan              Baku     40.40      49.88   \n",
              "11              Bahamas            Nassau     25.08     -77.35   \n",
              "12              Bahrain            Manama     26.24      50.58   \n",
              "13           Bangladesh             Dhaka     23.72      90.41   \n",
              "14             Barbados        Bridgetown     13.10     -59.62   \n",
              "15              Belarus             Minsk     53.90      27.57   \n",
              "16              Belgium          Brussels     50.83       4.33   \n",
              "17               Belize          Belmopan     17.25     -88.77   \n",
              "18                Benin        Porto-Novo      6.48       2.62   \n",
              "19               Bhutan           Thimphu     27.48      89.60   \n",
              "\n",
              "                          timezone  last_updated_epoch      last_updated  \\\n",
              "0                       Asia/Kabul          1715849100  2024-05-16 13:15   \n",
              "1                    Europe/Tirane          1715849100  2024-05-16 10:45   \n",
              "2                   Africa/Algiers          1715849100  2024-05-16 09:45   \n",
              "3                   Europe/Andorra          1715849100  2024-05-16 10:45   \n",
              "4                    Africa/Luanda          1715849100  2024-05-16 09:45   \n",
              "5                  America/Antigua          1715849100  2024-05-16 04:45   \n",
              "6   America/Argentina/Buenos_Aires          1715849100  2024-05-16 05:45   \n",
              "7                     Asia/Yerevan          1715849100  2024-05-16 12:45   \n",
              "8                 Australia/Sydney          1715849100  2024-05-16 18:45   \n",
              "9                    Europe/Vienna          1715849100  2024-05-16 10:45   \n",
              "10                       Asia/Baku          1715849100  2024-05-16 12:45   \n",
              "11                  America/Nassau          1715849100  2024-05-16 04:45   \n",
              "12                    Asia/Bahrain          1715849100  2024-05-16 11:45   \n",
              "13                      Asia/Dhaka          1715849100  2024-05-16 14:45   \n",
              "14                America/Barbados          1715849100  2024-05-16 04:45   \n",
              "15                    Europe/Minsk          1715849100  2024-05-16 11:45   \n",
              "16                 Europe/Brussels          1715849100  2024-05-16 10:45   \n",
              "17                  America/Belize          1715849100  2024-05-16 02:45   \n",
              "18               Africa/Porto-Novo          1715849100  2024-05-16 09:45   \n",
              "19                    Asia/Thimphu          1715849100  2024-05-16 14:45   \n",
              "\n",
              "    temperature_celsius  temperature_fahrenheit  \\\n",
              "0                  26.6                    79.8   \n",
              "1                  19.0                    66.2   \n",
              "2                  23.0                    73.4   \n",
              "3                   6.3                    43.3   \n",
              "4                  26.0                    78.8   \n",
              "5                  26.0                    78.8   \n",
              "6                   8.0                    46.4   \n",
              "7                  19.0                    66.2   \n",
              "8                   9.0                    48.2   \n",
              "9                  16.0                    60.8   \n",
              "10                 17.0                    62.6   \n",
              "11                 27.0                    80.6   \n",
              "12                 36.0                    96.8   \n",
              "13                 38.4                   101.2   \n",
              "14                 28.0                    82.4   \n",
              "15                 17.0                    62.6   \n",
              "16                 15.0                    59.0   \n",
              "17                 26.0                    78.9   \n",
              "18                 28.0                    82.4   \n",
              "19                 18.2                    64.8   \n",
              "\n",
              "                            condition_text  ...  air_quality_PM10  \\\n",
              "0                            Partly Cloudy  ...              26.6   \n",
              "1                            Partly cloudy  ...               2.0   \n",
              "2                                    Sunny  ...              18.4   \n",
              "3                            Light drizzle  ...               0.9   \n",
              "4                            Partly cloudy  ...             262.3   \n",
              "5                            Partly cloudy  ...               4.5   \n",
              "6                                    Clear  ...               5.3   \n",
              "7                            Partly cloudy  ...               0.9   \n",
              "8                                    Clear  ...               5.4   \n",
              "9                            Partly cloudy  ...               4.4   \n",
              "10                           Partly cloudy  ...               2.2   \n",
              "11                           Partly cloudy  ...              24.6   \n",
              "12                                   Sunny  ...             114.3   \n",
              "13                           Partly Cloudy  ...              57.0   \n",
              "14                           Partly cloudy  ...               8.2   \n",
              "15                                   Sunny  ...               1.7   \n",
              "16                           Partly cloudy  ...              15.8   \n",
              "17                                Overcast  ...              32.1   \n",
              "18     Moderate or heavy rain with thunder  ...              15.7   \n",
              "19  Patchy light rain in area with thunder  ...              11.5   \n",
              "\n",
              "    air_quality_us-epa-index  air_quality_gb-defra-index   sunrise    sunset  \\\n",
              "0                          1                           1  04:50 AM  06:50 PM   \n",
              "1                          1                           1  05:21 AM  07:54 PM   \n",
              "2                          1                           1  05:40 AM  07:50 PM   \n",
              "3                          1                           1  06:31 AM  09:11 PM   \n",
              "4                          5                          10  06:12 AM  05:55 PM   \n",
              "5                          1                           1  05:36 AM  06:32 PM   \n",
              "6                          1                           1  07:43 AM  05:59 PM   \n",
              "7                          1                           1  05:45 AM  08:12 PM   \n",
              "8                          1                           1  06:52 AM  05:07 PM   \n",
              "9                          1                           1  05:14 AM  08:29 PM   \n",
              "10                         1                           1  05:23 AM  07:51 PM   \n",
              "11                         1                           2  06:24 AM  07:48 PM   \n",
              "12                         2                           4  04:50 AM  06:18 PM   \n",
              "13                         3                           6  05:16 AM  06:34 PM   \n",
              "14                         1                           1  05:33 AM  06:17 PM   \n",
              "15                         1                           1  05:05 AM  09:08 PM   \n",
              "16                         1                           2  05:52 AM  09:28 PM   \n",
              "17                         1                           1  05:23 AM  06:20 PM   \n",
              "18                         1                           1  06:33 AM  06:59 PM   \n",
              "19                         1                           1  05:12 AM  06:44 PM   \n",
              "\n",
              "    moonrise     moonset      moon_phase  moon_illumination  New Column  \n",
              "0   12:12 PM    01:11 AM  Waxing Gibbous                 55        53.2  \n",
              "1   12:58 PM    02:14 AM  Waxing Gibbous                 55        38.0  \n",
              "2   01:15 PM    02:14 AM  Waxing Gibbous                 55        46.0  \n",
              "3   02:12 PM    03:31 AM  Waxing Gibbous                 55        12.6  \n",
              "4   01:17 PM    12:38 AM  Waxing Gibbous                 55        52.0  \n",
              "5   01:05 PM    01:14 AM  Waxing Gibbous                 55        52.0  \n",
              "6   02:36 PM    01:04 AM  Waxing Gibbous                 55        16.0  \n",
              "7   01:17 PM    02:31 AM  Waxing Gibbous                 55        38.0  \n",
              "8   01:31 PM  No moonset  Waxing Gibbous                 55        18.0  \n",
              "9   01:00 PM    02:42 AM  Waxing Gibbous                 55        32.0  \n",
              "10  12:54 PM    02:10 AM  Waxing Gibbous                 55        34.0  \n",
              "11  02:01 PM    02:26 AM  Waxing Gibbous                 55        54.0  \n",
              "12  12:10 PM    12:45 AM  Waxing Gibbous                 55        72.0  \n",
              "13  12:28 PM    12:58 AM  Waxing Gibbous                 55        76.8  \n",
              "14  12:59 PM    01:00 AM  Waxing Gibbous                 55        56.0  \n",
              "15  12:59 PM    03:13 AM  Waxing Gibbous                 55        34.0  \n",
              "16  01:45 PM    03:38 AM  Waxing Gibbous                 55        30.0  \n",
              "17  12:56 PM    01:04 AM  Waxing Gibbous                 55        52.0  \n",
              "18  01:48 PM    01:38 AM  Waxing Gibbous                 55        56.0  \n",
              "19  12:27 PM    01:07 AM  Waxing Gibbous                 55        36.4  \n",
              "\n",
              "[20 rows x 42 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-403765cd-9b90-4c3a-abe5-8fe6194c2108\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>location_name</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>timezone</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>condition_text</th>\n",
              "      <th>...</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>sunrise</th>\n",
              "      <th>sunset</th>\n",
              "      <th>moonrise</th>\n",
              "      <th>moonset</th>\n",
              "      <th>moon_phase</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>Kabul</td>\n",
              "      <td>34.52</td>\n",
              "      <td>69.18</td>\n",
              "      <td>Asia/Kabul</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 13:15</td>\n",
              "      <td>26.6</td>\n",
              "      <td>79.8</td>\n",
              "      <td>Partly Cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>26.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>04:50 AM</td>\n",
              "      <td>06:50 PM</td>\n",
              "      <td>12:12 PM</td>\n",
              "      <td>01:11 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>53.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>41.33</td>\n",
              "      <td>19.82</td>\n",
              "      <td>Europe/Tirane</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>19.0</td>\n",
              "      <td>66.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:21 AM</td>\n",
              "      <td>07:54 PM</td>\n",
              "      <td>12:58 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>Algiers</td>\n",
              "      <td>36.76</td>\n",
              "      <td>3.05</td>\n",
              "      <td>Africa/Algiers</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>23.0</td>\n",
              "      <td>73.4</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>18.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:40 AM</td>\n",
              "      <td>07:50 PM</td>\n",
              "      <td>01:15 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>46.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andorra</td>\n",
              "      <td>Andorra La Vella</td>\n",
              "      <td>42.50</td>\n",
              "      <td>1.52</td>\n",
              "      <td>Europe/Andorra</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>6.3</td>\n",
              "      <td>43.3</td>\n",
              "      <td>Light drizzle</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:31 AM</td>\n",
              "      <td>09:11 PM</td>\n",
              "      <td>02:12 PM</td>\n",
              "      <td>03:31 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>12.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>Luanda</td>\n",
              "      <td>-8.84</td>\n",
              "      <td>13.23</td>\n",
              "      <td>Africa/Luanda</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>262.3</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>06:12 AM</td>\n",
              "      <td>05:55 PM</td>\n",
              "      <td>01:17 PM</td>\n",
              "      <td>12:38 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>Saint John's</td>\n",
              "      <td>17.12</td>\n",
              "      <td>-61.85</td>\n",
              "      <td>America/Antigua</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 04:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:36 AM</td>\n",
              "      <td>06:32 PM</td>\n",
              "      <td>01:05 PM</td>\n",
              "      <td>01:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>Buenos Aires</td>\n",
              "      <td>-34.59</td>\n",
              "      <td>-58.67</td>\n",
              "      <td>America/Argentina/Buenos_Aires</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 05:45</td>\n",
              "      <td>8.0</td>\n",
              "      <td>46.4</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>07:43 AM</td>\n",
              "      <td>05:59 PM</td>\n",
              "      <td>02:36 PM</td>\n",
              "      <td>01:04 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>16.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>Yerevan</td>\n",
              "      <td>40.18</td>\n",
              "      <td>44.51</td>\n",
              "      <td>Asia/Yerevan</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 12:45</td>\n",
              "      <td>19.0</td>\n",
              "      <td>66.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:45 AM</td>\n",
              "      <td>08:12 PM</td>\n",
              "      <td>01:17 PM</td>\n",
              "      <td>02:31 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 18:45</td>\n",
              "      <td>9.0</td>\n",
              "      <td>48.2</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:52 AM</td>\n",
              "      <td>05:07 PM</td>\n",
              "      <td>01:31 PM</td>\n",
              "      <td>No moonset</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>18.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Austria</td>\n",
              "      <td>Vienna</td>\n",
              "      <td>48.20</td>\n",
              "      <td>16.37</td>\n",
              "      <td>Europe/Vienna</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>16.0</td>\n",
              "      <td>60.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>4.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:14 AM</td>\n",
              "      <td>08:29 PM</td>\n",
              "      <td>01:00 PM</td>\n",
              "      <td>02:42 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>32.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Azerbaijan</td>\n",
              "      <td>Baku</td>\n",
              "      <td>40.40</td>\n",
              "      <td>49.88</td>\n",
              "      <td>Asia/Baku</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 12:45</td>\n",
              "      <td>17.0</td>\n",
              "      <td>62.6</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:23 AM</td>\n",
              "      <td>07:51 PM</td>\n",
              "      <td>12:54 PM</td>\n",
              "      <td>02:10 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>34.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bahamas</td>\n",
              "      <td>Nassau</td>\n",
              "      <td>25.08</td>\n",
              "      <td>-77.35</td>\n",
              "      <td>America/Nassau</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 04:45</td>\n",
              "      <td>27.0</td>\n",
              "      <td>80.6</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>24.6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>06:24 AM</td>\n",
              "      <td>07:48 PM</td>\n",
              "      <td>02:01 PM</td>\n",
              "      <td>02:26 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>54.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bahrain</td>\n",
              "      <td>Manama</td>\n",
              "      <td>26.24</td>\n",
              "      <td>50.58</td>\n",
              "      <td>Asia/Bahrain</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 11:45</td>\n",
              "      <td>36.0</td>\n",
              "      <td>96.8</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>114.3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>04:50 AM</td>\n",
              "      <td>06:18 PM</td>\n",
              "      <td>12:10 PM</td>\n",
              "      <td>12:45 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>72.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>Dhaka</td>\n",
              "      <td>23.72</td>\n",
              "      <td>90.41</td>\n",
              "      <td>Asia/Dhaka</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 14:45</td>\n",
              "      <td>38.4</td>\n",
              "      <td>101.2</td>\n",
              "      <td>Partly Cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>57.0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>05:16 AM</td>\n",
              "      <td>06:34 PM</td>\n",
              "      <td>12:28 PM</td>\n",
              "      <td>12:58 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>76.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Barbados</td>\n",
              "      <td>Bridgetown</td>\n",
              "      <td>13.10</td>\n",
              "      <td>-59.62</td>\n",
              "      <td>America/Barbados</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 04:45</td>\n",
              "      <td>28.0</td>\n",
              "      <td>82.4</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>8.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:33 AM</td>\n",
              "      <td>06:17 PM</td>\n",
              "      <td>12:59 PM</td>\n",
              "      <td>01:00 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>56.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Belarus</td>\n",
              "      <td>Minsk</td>\n",
              "      <td>53.90</td>\n",
              "      <td>27.57</td>\n",
              "      <td>Europe/Minsk</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 11:45</td>\n",
              "      <td>17.0</td>\n",
              "      <td>62.6</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:05 AM</td>\n",
              "      <td>09:08 PM</td>\n",
              "      <td>12:59 PM</td>\n",
              "      <td>03:13 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>34.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>Brussels</td>\n",
              "      <td>50.83</td>\n",
              "      <td>4.33</td>\n",
              "      <td>Europe/Brussels</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>15.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>15.8</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>05:52 AM</td>\n",
              "      <td>09:28 PM</td>\n",
              "      <td>01:45 PM</td>\n",
              "      <td>03:38 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>30.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Belize</td>\n",
              "      <td>Belmopan</td>\n",
              "      <td>17.25</td>\n",
              "      <td>-88.77</td>\n",
              "      <td>America/Belize</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 02:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.9</td>\n",
              "      <td>Overcast</td>\n",
              "      <td>...</td>\n",
              "      <td>32.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:23 AM</td>\n",
              "      <td>06:20 PM</td>\n",
              "      <td>12:56 PM</td>\n",
              "      <td>01:04 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Benin</td>\n",
              "      <td>Porto-Novo</td>\n",
              "      <td>6.48</td>\n",
              "      <td>2.62</td>\n",
              "      <td>Africa/Porto-Novo</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>28.0</td>\n",
              "      <td>82.4</td>\n",
              "      <td>Moderate or heavy rain with thunder</td>\n",
              "      <td>...</td>\n",
              "      <td>15.7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:33 AM</td>\n",
              "      <td>06:59 PM</td>\n",
              "      <td>01:48 PM</td>\n",
              "      <td>01:38 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>56.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Bhutan</td>\n",
              "      <td>Thimphu</td>\n",
              "      <td>27.48</td>\n",
              "      <td>89.60</td>\n",
              "      <td>Asia/Thimphu</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 14:45</td>\n",
              "      <td>18.2</td>\n",
              "      <td>64.8</td>\n",
              "      <td>Patchy light rain in area with thunder</td>\n",
              "      <td>...</td>\n",
              "      <td>11.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:12 AM</td>\n",
              "      <td>06:44 PM</td>\n",
              "      <td>12:27 PM</td>\n",
              "      <td>01:07 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>36.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 42 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-403765cd-9b90-4c3a-abe5-8fe6194c2108')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-403765cd-9b90-4c3a-abe5-8fe6194c2108 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-403765cd-9b90-4c3a-abe5-8fe6194c2108');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c293f1a8-3b2f-4965-99e0-5ebe2f6cc717\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c293f1a8-3b2f-4965-99e0-5ebe2f6cc717')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c293f1a8-3b2f-4965-99e0-5ebe2f6cc717 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 367
        },
        "id": "SZ-STjvDAnri",
        "outputId": "196bf246-bfdc-433f-8572-b9bad1ecedbb"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          latitude    longitude  last_updated_epoch  temperature_celsius  \\\n",
              "count  5453.000000  5453.000000        5.453000e+03          5453.000000   \n",
              "mean     19.217372    21.589169        1.716952e+09            25.579002   \n",
              "std      24.506665    65.620384        6.933578e+05             7.145013   \n",
              "min     -41.300000  -175.200000        1.715849e+09            -1.000000   \n",
              "25%       3.480000    -6.840000        1.716387e+09            21.100000   \n",
              "50%      17.250000    23.240000        1.716991e+09            26.000000   \n",
              "75%      41.320000    49.880000        1.717510e+09            30.000000   \n",
              "max      63.830000   179.220000        1.718115e+09            46.600000   \n",
              "\n",
              "       temperature_fahrenheit     wind_mph     wind_kph  wind_degree  \\\n",
              "count             5453.000000  5453.000000  5453.000000  5453.000000   \n",
              "mean                78.042747     8.866716    14.273501   175.167798   \n",
              "std                 12.861748     5.814534     9.361623   100.572654   \n",
              "min                 30.200000     2.200000     3.600000     1.000000   \n",
              "25%                 69.900000     4.300000     6.800000    90.000000   \n",
              "50%                 78.800000     8.100000    13.000000   170.000000   \n",
              "75%                 86.000000    11.900000    19.100000   260.000000   \n",
              "max                115.900000   160.800000   258.800000   360.000000   \n",
              "\n",
              "       pressure_mb  pressure_in  ...  air_quality_Carbon_Monoxide  \\\n",
              "count  5453.000000  5453.000000  ...                  5453.000000   \n",
              "mean   1012.846873    29.908471  ...                   522.461892   \n",
              "std       5.572558     0.163972  ...                  1600.457771   \n",
              "min     984.000000    29.060000  ...                 -9999.000000   \n",
              "25%    1010.000000    29.830000  ...                   195.300000   \n",
              "50%    1013.000000    29.910000  ...                   230.300000   \n",
              "75%    1016.000000    30.000000  ...                   350.500000   \n",
              "max    1045.000000    30.860000  ...                 37597.699000   \n",
              "\n",
              "       air_quality_Ozone  air_quality_Nitrogen_dioxide  \\\n",
              "count        5453.000000                   5453.000000   \n",
              "mean           61.309169                      9.875903   \n",
              "std            40.533134                     23.831562   \n",
              "min             0.000000                      0.000000   \n",
              "25%            28.600000                      0.500000   \n",
              "50%            57.200000                      1.900000   \n",
              "75%            90.800000                      6.900000   \n",
              "max           303.300000                    260.500000   \n",
              "\n",
              "       air_quality_Sulphur_dioxide  air_quality_PM2.5  air_quality_PM10  \\\n",
              "count                  5453.000000        5453.000000       5453.000000   \n",
              "mean                      6.627086          18.051201         33.278232   \n",
              "std                      15.991853          66.555340         87.155019   \n",
              "min                       0.000000           0.500000          0.500000   \n",
              "25%                       0.400000           2.000000          3.500000   \n",
              "50%                       1.300000           4.800000          9.100000   \n",
              "75%                       4.700000          15.300000         30.100000   \n",
              "max                     223.200000        1614.100000       1814.400000   \n",
              "\n",
              "       air_quality_us-epa-index  air_quality_gb-defra-index  \\\n",
              "count               5453.000000                 5453.000000   \n",
              "mean                   1.379791                    1.825784   \n",
              "std                    0.821846                    1.900520   \n",
              "min                    1.000000                    1.000000   \n",
              "25%                    1.000000                    1.000000   \n",
              "50%                    1.000000                    1.000000   \n",
              "75%                    1.000000                    2.000000   \n",
              "max                    6.000000                   10.000000   \n",
              "\n",
              "       moon_illumination   New Column  \n",
              "count        5453.000000  5453.000000  \n",
              "mean           52.434990    51.158005  \n",
              "std            35.924393    14.290026  \n",
              "min             0.000000    -2.000000  \n",
              "25%            16.000000    42.200000  \n",
              "50%            55.000000    52.000000  \n",
              "75%            88.000000    60.000000  \n",
              "max           100.000000    93.200000  \n",
              "\n",
              "[8 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4c6ce4b2-f631-467f-a668-d449f478823b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>wind_mph</th>\n",
              "      <th>wind_kph</th>\n",
              "      <th>wind_degree</th>\n",
              "      <th>pressure_mb</th>\n",
              "      <th>pressure_in</th>\n",
              "      <th>...</th>\n",
              "      <th>air_quality_Carbon_Monoxide</th>\n",
              "      <th>air_quality_Ozone</th>\n",
              "      <th>air_quality_Nitrogen_dioxide</th>\n",
              "      <th>air_quality_Sulphur_dioxide</th>\n",
              "      <th>air_quality_PM2.5</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5.453000e+03</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "      <td>5453.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>19.217372</td>\n",
              "      <td>21.589169</td>\n",
              "      <td>1.716952e+09</td>\n",
              "      <td>25.579002</td>\n",
              "      <td>78.042747</td>\n",
              "      <td>8.866716</td>\n",
              "      <td>14.273501</td>\n",
              "      <td>175.167798</td>\n",
              "      <td>1012.846873</td>\n",
              "      <td>29.908471</td>\n",
              "      <td>...</td>\n",
              "      <td>522.461892</td>\n",
              "      <td>61.309169</td>\n",
              "      <td>9.875903</td>\n",
              "      <td>6.627086</td>\n",
              "      <td>18.051201</td>\n",
              "      <td>33.278232</td>\n",
              "      <td>1.379791</td>\n",
              "      <td>1.825784</td>\n",
              "      <td>52.434990</td>\n",
              "      <td>51.158005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>24.506665</td>\n",
              "      <td>65.620384</td>\n",
              "      <td>6.933578e+05</td>\n",
              "      <td>7.145013</td>\n",
              "      <td>12.861748</td>\n",
              "      <td>5.814534</td>\n",
              "      <td>9.361623</td>\n",
              "      <td>100.572654</td>\n",
              "      <td>5.572558</td>\n",
              "      <td>0.163972</td>\n",
              "      <td>...</td>\n",
              "      <td>1600.457771</td>\n",
              "      <td>40.533134</td>\n",
              "      <td>23.831562</td>\n",
              "      <td>15.991853</td>\n",
              "      <td>66.555340</td>\n",
              "      <td>87.155019</td>\n",
              "      <td>0.821846</td>\n",
              "      <td>1.900520</td>\n",
              "      <td>35.924393</td>\n",
              "      <td>14.290026</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-41.300000</td>\n",
              "      <td>-175.200000</td>\n",
              "      <td>1.715849e+09</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>30.200000</td>\n",
              "      <td>2.200000</td>\n",
              "      <td>3.600000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>984.000000</td>\n",
              "      <td>29.060000</td>\n",
              "      <td>...</td>\n",
              "      <td>-9999.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>3.480000</td>\n",
              "      <td>-6.840000</td>\n",
              "      <td>1.716387e+09</td>\n",
              "      <td>21.100000</td>\n",
              "      <td>69.900000</td>\n",
              "      <td>4.300000</td>\n",
              "      <td>6.800000</td>\n",
              "      <td>90.000000</td>\n",
              "      <td>1010.000000</td>\n",
              "      <td>29.830000</td>\n",
              "      <td>...</td>\n",
              "      <td>195.300000</td>\n",
              "      <td>28.600000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.400000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>42.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>17.250000</td>\n",
              "      <td>23.240000</td>\n",
              "      <td>1.716991e+09</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>78.800000</td>\n",
              "      <td>8.100000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>170.000000</td>\n",
              "      <td>1013.000000</td>\n",
              "      <td>29.910000</td>\n",
              "      <td>...</td>\n",
              "      <td>230.300000</td>\n",
              "      <td>57.200000</td>\n",
              "      <td>1.900000</td>\n",
              "      <td>1.300000</td>\n",
              "      <td>4.800000</td>\n",
              "      <td>9.100000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>52.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>41.320000</td>\n",
              "      <td>49.880000</td>\n",
              "      <td>1.717510e+09</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>86.000000</td>\n",
              "      <td>11.900000</td>\n",
              "      <td>19.100000</td>\n",
              "      <td>260.000000</td>\n",
              "      <td>1016.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>350.500000</td>\n",
              "      <td>90.800000</td>\n",
              "      <td>6.900000</td>\n",
              "      <td>4.700000</td>\n",
              "      <td>15.300000</td>\n",
              "      <td>30.100000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>88.000000</td>\n",
              "      <td>60.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>63.830000</td>\n",
              "      <td>179.220000</td>\n",
              "      <td>1.718115e+09</td>\n",
              "      <td>46.600000</td>\n",
              "      <td>115.900000</td>\n",
              "      <td>160.800000</td>\n",
              "      <td>258.800000</td>\n",
              "      <td>360.000000</td>\n",
              "      <td>1045.000000</td>\n",
              "      <td>30.860000</td>\n",
              "      <td>...</td>\n",
              "      <td>37597.699000</td>\n",
              "      <td>303.300000</td>\n",
              "      <td>260.500000</td>\n",
              "      <td>223.200000</td>\n",
              "      <td>1614.100000</td>\n",
              "      <td>1814.400000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>93.200000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 31 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c6ce4b2-f631-467f-a668-d449f478823b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4c6ce4b2-f631-467f-a668-d449f478823b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4c6ce4b2-f631-467f-a668-d449f478823b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d9f2a440-61fe-4384-81c1-d5a4fd13fa6f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9f2a440-61fe-4384-81c1-d5a4fd13fa6f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d9f2a440-61fe-4384-81c1-d5a4fd13fa6f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B_x3hnZOAsKz",
        "outputId": "dc75d972-ca1f-4b63-bfef-fe1baa6db471"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 5453 entries, 0 to 5452\n",
            "Data columns (total 42 columns):\n",
            " #   Column                        Non-Null Count  Dtype  \n",
            "---  ------                        --------------  -----  \n",
            " 0   country                       5453 non-null   object \n",
            " 1   location_name                 5453 non-null   object \n",
            " 2   latitude                      5453 non-null   float64\n",
            " 3   longitude                     5453 non-null   float64\n",
            " 4   timezone                      5453 non-null   object \n",
            " 5   last_updated_epoch            5453 non-null   int64  \n",
            " 6   last_updated                  5453 non-null   object \n",
            " 7   temperature_celsius           5453 non-null   float64\n",
            " 8   temperature_fahrenheit        5453 non-null   float64\n",
            " 9   condition_text                5453 non-null   object \n",
            " 10  wind_mph                      5453 non-null   float64\n",
            " 11  wind_kph                      5453 non-null   float64\n",
            " 12  wind_degree                   5453 non-null   int64  \n",
            " 13  wind_direction                5453 non-null   object \n",
            " 14  pressure_mb                   5453 non-null   float64\n",
            " 15  pressure_in                   5453 non-null   float64\n",
            " 16  precip_mm                     5453 non-null   float64\n",
            " 17  precip_in                     5453 non-null   float64\n",
            " 18  humidity                      5453 non-null   int64  \n",
            " 19  cloud                         5453 non-null   int64  \n",
            " 20  feels_like_celsius            5453 non-null   float64\n",
            " 21  feels_like_fahrenheit         5453 non-null   float64\n",
            " 22  visibility_km                 5453 non-null   float64\n",
            " 23  visibility_miles              5453 non-null   float64\n",
            " 24  uv_index                      5453 non-null   float64\n",
            " 25  gust_mph                      5453 non-null   float64\n",
            " 26  gust_kph                      5453 non-null   float64\n",
            " 27  air_quality_Carbon_Monoxide   5453 non-null   float64\n",
            " 28  air_quality_Ozone             5453 non-null   float64\n",
            " 29  air_quality_Nitrogen_dioxide  5453 non-null   float64\n",
            " 30  air_quality_Sulphur_dioxide   5453 non-null   float64\n",
            " 31  air_quality_PM2.5             5453 non-null   float64\n",
            " 32  air_quality_PM10              5453 non-null   float64\n",
            " 33  air_quality_us-epa-index      5453 non-null   int64  \n",
            " 34  air_quality_gb-defra-index    5453 non-null   int64  \n",
            " 35  sunrise                       5453 non-null   object \n",
            " 36  sunset                        5453 non-null   object \n",
            " 37  moonrise                      5453 non-null   object \n",
            " 38  moonset                       5453 non-null   object \n",
            " 39  moon_phase                    5453 non-null   object \n",
            " 40  moon_illumination             5453 non-null   int64  \n",
            " 41  New Column                    5453 non-null   float64\n",
            "dtypes: float64(24), int64(7), object(11)\n",
            "memory usage: 1.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "5Tem4E3OBEDK",
        "outputId": "1dd31b6f-cd86-4471-cc3d-0b33e2d08d1c"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "country      location_name  latitude  longitude  timezone       last_updated_epoch  last_updated      temperature_celsius  temperature_fahrenheit  condition_text                  wind_mph  wind_kph  wind_degree  wind_direction  pressure_mb  pressure_in  precip_mm  precip_in  humidity  cloud  feels_like_celsius  feels_like_fahrenheit  visibility_km  visibility_miles  uv_index  gust_mph  gust_kph  air_quality_Carbon_Monoxide  air_quality_Ozone  air_quality_Nitrogen_dioxide  air_quality_Sulphur_dioxide  air_quality_PM2.5  air_quality_PM10  air_quality_us-epa-index  air_quality_gb-defra-index  sunrise   sunset    moonrise  moonset     moon_phase       moon_illumination  New Column\n",
              "Afghanistan  Kabul           34.52    69.18      Asia/Kabul     1715849100          2024-05-16 13:15  26.6                 79.8                    Partly Cloudy                   8.3       13.3      338          NNW             1012.0       29.89        0.00       0.00       24        30     25.3                77.5                   10.0           6.0               7.0       9.5       15.3      277.0                        103.0              1.1                           0.2                          8.4                26.6              1                         1                           04:50 AM  06:50 PM  12:12 PM  01:11 AM    Waxing Gibbous   55                 53.2          1\n",
              "Oman         Muscat          23.61    58.59      Asia/Muscat    1718028900          2024-06-10 18:15  36.4                 97.5                    Sunny                           6.9       11.2      50           NE              1002.0       29.59        0.00       0.00       37        0      44.7                112.4                  10.0           6.0               8.0       8.1       13.1      208.6                        118.7              0.9                           2.6                          31.9               91.7              2                         3                           05:18 AM  06:52 PM  08:40 AM  10:29 PM    Waxing Crescent  13                 72.8          1\n",
              "Pakistan     Islamabad       33.70    73.17      Asia/Karachi   1716302700          2024-05-21 19:45  34.0                 93.2                    Sunny                           7.2       11.5      308          NW              1001.0       29.57        0.00       0.00       19        0      32.0                89.6                   10.0           6.0               8.0       12.9      20.8      1108.2                       45.1               59.6                          3.8                          19.6               34.0              2                         2                           05:03 AM  07:06 PM  05:08 PM  03:25 AM    Waxing Gibbous   93                 68.0          1\n",
              "                                                                1716216300          2024-05-20 19:45  33.5                 92.4                    Sunny                           7.8       12.6      339          NNW             1001.0       29.57        0.00       0.00       22        0      31.7                89.1                   10.0           6.0               8.0       14.2      22.8      1108.2                       46.5               60.3                          3.4                          16.6               29.3              2                         2                           05:03 AM  07:05 PM  04:09 PM  03:00 AM    Waxing Gibbous   88                 67.0          1\n",
              "                                                                1716128100          2024-05-19 19:15  32.1                 89.8                    Sunny                           4.0       6.5       353          N               1001.0       29.56        0.00       0.00       29        3      31.2                88.1                   10.0           6.0               8.0       6.3       10.1      1335.1                       70.1               67.9                          4.0                          20.8               35.6              2                         2                           05:04 AM  07:04 PM  03:13 PM  02:36 AM    Waxing Gibbous   81                 64.2          1\n",
n",
              "Germany      Berlin          52.52    13.40      Europe/Berlin  1715849100          2024-05-16 10:45  22.0                 71.6                    Sunny                           20.6      33.1      120          ESE             1011.0       29.85        0.00       0.00       38        0      23.9                75.1                   10.0           6.0               6.0       25.1      40.3      223.6                        86.6               4.0                           5.0                          6.6                7.5               1                         1                           05:08 AM  08:58 PM  01:03 PM  03:06 AM    Waxing Gibbous   55                 44.0          1\n",
              "Georgia      Tbilisi         41.73    44.79      Asia/Tbilisi   1718114400          2024-06-11 18:00  29.2                 84.6                    Partly cloudy                   5.6       9.0       200          SSW             1011.0       29.85        0.00       0.00       45        37     30.3                86.5                   10.0           6.0               7.0       10.1      16.2      195.3                        47.9               3.8                           0.5                          4.2                5.8               1                         1                           05:26 AM  08:35 PM  09:55 AM  12:09 AM    Waxing Crescent  21                 58.4          1\n",
              "                                                                1718028900          2024-06-10 18:15  23.3                 73.9                    Patchy light rain with thunder  16.1      25.9      340          NNW             1012.0       29.88        0.46       0.02       57        62     25.1                77.1                   10.0           6.0               6.0       20.6      33.1      190.3                        49.4               2.1                           0.4                          2.3                3.5               1                         1                           05:26 AM  08:35 PM  08:48 AM  No moonset  Waxing Crescent  13                 46.6          1\n",
              "                                                                1717942500          2024-06-09 18:15  26.4                 79.5                    Partly cloudy                   10.5      16.9      150          SSE             1009.0       29.80        0.00       0.00       65        25     28.3                83.0                   10.0           6.0               5.0       15.0      24.1      185.3                        48.6               3.2                           0.4                          1.6                2.2               1                         1                           05:26 AM  08:34 PM  07:40 AM  11:37 PM    Waxing Crescent  7                  52.8          1\n",
              "Zimbabwe     Harare         -17.82    31.04      Africa/Harare  1718115300          2024-06-11 16:15  20.4                 68.7                    Sunny                           7.4       11.9      77           ENE             1022.0       30.18        0.00       0.00       15        0      20.4                68.6                   10.0           6.0               7.0       8.5       13.7      353.8                        54.4               4.9                           8.8                          11.7               14.8              1                         1                           06:23 AM  05:28 PM  10:33 AM  10:05 PM    Waxing Crescent  21                 40.8          1\n",
              "Name: count, Length: 5453, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>country</th>\n",
              "      <th>location_name</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>timezone</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>condition_text</th>\n",
              "      <th>wind_mph</th>\n",
              "      <th>wind_kph</th>\n",
              "      <th>wind_degree</th>\n",
              "      <th>wind_direction</th>\n",
              "      <th>pressure_mb</th>\n",
              "      <th>pressure_in</th>\n",
              "      <th>precip_mm</th>\n",
              "      <th>precip_in</th>\n",
              "      <th>humidity</th>\n",
              "      <th>cloud</th>\n",
              "      <th>feels_like_celsius</th>\n",
              "      <th>feels_like_fahrenheit</th>\n",
              "      <th>visibility_km</th>\n",
              "      <th>visibility_miles</th>\n",
              "      <th>uv_index</th>\n",
              "      <th>gust_mph</th>\n",
              "      <th>gust_kph</th>\n",
              "      <th>air_quality_Carbon_Monoxide</th>\n",
              "      <th>air_quality_Ozone</th>\n",
              "      <th>air_quality_Nitrogen_dioxide</th>\n",
              "      <th>air_quality_Sulphur_dioxide</th>\n",
              "      <th>air_quality_PM2.5</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>sunrise</th>\n",
              "      <th>sunset</th>\n",
              "      <th>moonrise</th>\n",
              "      <th>moonset</th>\n",
              "      <th>moon_phase</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Afghanistan</th>\n",
              "      <th>Kabul</th>\n",
              "      <th>34.52</th>\n",
              "      <th>69.18</th>\n",
              "      <th>Asia/Kabul</th>\n",
              "      <th>1715849100</th>\n",
              "      <th>2024-05-16 13:15</th>\n",
              "      <th>26.6</th>\n",
              "      <th>79.8</th>\n",
              "      <th>Partly Cloudy</th>\n",
              "      <th>8.3</th>\n",
              "      <th>13.3</th>\n",
              "      <th>338</th>\n",
              "      <th>NNW</th>\n",
              "      <th>1012.0</th>\n",
              "      <th>29.89</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>24</th>\n",
              "      <th>30</th>\n",
              "      <th>25.3</th>\n",
              "      <th>77.5</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>7.0</th>\n",
              "      <th>9.5</th>\n",
              "      <th>15.3</th>\n",
              "      <th>277.0</th>\n",
              "      <th>103.0</th>\n",
              "      <th>1.1</th>\n",
              "      <th>0.2</th>\n",
              "      <th>8.4</th>\n",
              "      <th>26.6</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>04:50 AM</th>\n",
              "      <th>06:50 PM</th>\n",
              "      <th>12:12 PM</th>\n",
              "      <th>01:11 AM</th>\n",
              "      <th>Waxing Gibbous</th>\n",
              "      <th>55</th>\n",
              "      <th>53.2</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Oman</th>\n",
              "      <th>Muscat</th>\n",
              "      <th>23.61</th>\n",
              "      <th>58.59</th>\n",
              "      <th>Asia/Muscat</th>\n",
              "      <th>1718028900</th>\n",
              "      <th>2024-06-10 18:15</th>\n",
              "      <th>36.4</th>\n",
              "      <th>97.5</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>6.9</th>\n",
              "      <th>11.2</th>\n",
              "      <th>50</th>\n",
              "      <th>NE</th>\n",
              "      <th>1002.0</th>\n",
              "      <th>29.59</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>37</th>\n",
              "      <th>0</th>\n",
              "      <th>44.7</th>\n",
              "      <th>112.4</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>8.0</th>\n",
              "      <th>8.1</th>\n",
              "      <th>13.1</th>\n",
              "      <th>208.6</th>\n",
              "      <th>118.7</th>\n",
              "      <th>0.9</th>\n",
              "      <th>2.6</th>\n",
              "      <th>31.9</th>\n",
              "      <th>91.7</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>05:18 AM</th>\n",
              "      <th>06:52 PM</th>\n",
              "      <th>08:40 AM</th>\n",
              "      <th>10:29 PM</th>\n",
              "      <th>Waxing Crescent</th>\n",
              "      <th>13</th>\n",
              "      <th>72.8</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Pakistan</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">Islamabad</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">33.70</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">73.17</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">Asia/Karachi</th>\n",
              "      <th>1716302700</th>\n",
              "      <th>2024-05-21 19:45</th>\n",
              "      <th>34.0</th>\n",
              "      <th>93.2</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>7.2</th>\n",
              "      <th>11.5</th>\n",
              "      <th>308</th>\n",
              "      <th>NW</th>\n",
              "      <th>1001.0</th>\n",
              "      <th>29.57</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>19</th>\n",
              "      <th>0</th>\n",
              "      <th>32.0</th>\n",
              "      <th>89.6</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>8.0</th>\n",
              "      <th>12.9</th>\n",
              "      <th>20.8</th>\n",
              "      <th>1108.2</th>\n",
              "      <th>45.1</th>\n",
              "      <th>59.6</th>\n",
              "      <th>3.8</th>\n",
              "      <th>19.6</th>\n",
              "      <th>34.0</th>\n",
              "      <th>2</th>\n",
              "      <th>2</th>\n",
              "      <th>05:03 AM</th>\n",
              "      <th>07:06 PM</th>\n",
              "      <th>05:08 PM</th>\n",
              "      <th>03:25 AM</th>\n",
              "      <th>Waxing Gibbous</th>\n",
              "      <th>93</th>\n",
              "      <th>68.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1716216300</th>\n",
              "      <th>2024-05-20 19:45</th>\n",
              "      <th>33.5</th>\n",
              "      <th>92.4</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>7.8</th>\n",
              "      <th>12.6</th>\n",
              "      <th>339</th>\n",
              "      <th>NNW</th>\n",
              "      <th>1001.0</th>\n",
              "      <th>29.57</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>22</th>\n",
              "      <th>0</th>\n",
              "      <th>31.7</th>\n",
              "      <th>89.1</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>8.0</th>\n",
              "      <th>14.2</th>\n",
              "      <th>22.8</th>\n",
              "      <th>1108.2</th>\n",
              "      <th>46.5</th>\n",
              "      <th>60.3</th>\n",
              "      <th>3.4</th>\n",
              "      <th>16.6</th>\n",
              "      <th>29.3</th>\n",
              "      <th>2</th>\n",
              "      <th>2</th>\n",
              "      <th>05:03 AM</th>\n",
              "      <th>07:05 PM</th>\n",
              "      <th>04:09 PM</th>\n",
              "      <th>03:00 AM</th>\n",
              "      <th>Waxing Gibbous</th>\n",
              "      <th>88</th>\n",
              "      <th>67.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1716128100</th>\n",
              "      <th>2024-05-19 19:15</th>\n",
              "      <th>32.1</th>\n",
              "      <th>89.8</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>4.0</th>\n",
              "      <th>6.5</th>\n",
              "      <th>353</th>\n",
              "      <th>N</th>\n",
              "      <th>1001.0</th>\n",
              "      <th>29.56</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>29</th>\n",
              "      <th>3</th>\n",
              "      <th>31.2</th>\n",
              "      <th>88.1</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>8.0</th>\n",
              "      <th>6.3</th>\n",
              "      <th>10.1</th>\n",
              "      <th>1335.1</th>\n",
              "      <th>70.1</th>\n",
              "      <th>67.9</th>\n",
              "      <th>4.0</th>\n",
              "      <th>20.8</th>\n",
              "      <th>35.6</th>\n",
              "      <th>2</th>\n",
              "      <th>2</th>\n",
              "      <th>05:04 AM</th>\n",
              "      <th>07:04 PM</th>\n",
              "      <th>03:13 PM</th>\n",
              "      <th>02:36 AM</th>\n",
              "      <th>Waxing Gibbous</th>\n",
              "      <th>81</th>\n",
              "      <th>64.2</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Germany</th>\n",
              "      <th>Berlin</th>\n",
              "      <th>52.52</th>\n",
              "      <th>13.40</th>\n",
              "      <th>Europe/Berlin</th>\n",
              "      <th>1715849100</th>\n",
              "      <th>2024-05-16 10:45</th>\n",
              "      <th>22.0</th>\n",
              "      <th>71.6</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>20.6</th>\n",
              "      <th>33.1</th>\n",
              "      <th>120</th>\n",
              "      <th>ESE</th>\n",
              "      <th>1011.0</th>\n",
              "      <th>29.85</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>38</th>\n",
              "      <th>0</th>\n",
              "      <th>23.9</th>\n",
              "      <th>75.1</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>25.1</th>\n",
              "      <th>40.3</th>\n",
              "      <th>223.6</th>\n",
              "      <th>86.6</th>\n",
              "      <th>4.0</th>\n",
              "      <th>5.0</th>\n",
              "      <th>6.6</th>\n",
              "      <th>7.5</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>05:08 AM</th>\n",
              "      <th>08:58 PM</th>\n",
              "      <th>01:03 PM</th>\n",
              "      <th>03:06 AM</th>\n",
              "      <th>Waxing Gibbous</th>\n",
              "      <th>55</th>\n",
              "      <th>44.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Georgia</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">Tbilisi</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">41.73</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">44.79</th>\n",
              "      <th rowspan=\"3\" valign=\"top\">Asia/Tbilisi</th>\n",
              "      <th>1718114400</th>\n",
              "      <th>2024-06-11 18:00</th>\n",
              "      <th>29.2</th>\n",
              "      <th>84.6</th>\n",
              "      <th>Partly cloudy</th>\n",
              "      <th>5.6</th>\n",
              "      <th>9.0</th>\n",
              "      <th>200</th>\n",
              "      <th>SSW</th>\n",
              "      <th>1011.0</th>\n",
              "      <th>29.85</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>45</th>\n",
              "      <th>37</th>\n",
              "      <th>30.3</th>\n",
              "      <th>86.5</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>7.0</th>\n",
              "      <th>10.1</th>\n",
              "      <th>16.2</th>\n",
              "      <th>195.3</th>\n",
              "      <th>47.9</th>\n",
              "      <th>3.8</th>\n",
              "      <th>0.5</th>\n",
              "      <th>4.2</th>\n",
              "      <th>5.8</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>05:26 AM</th>\n",
              "      <th>08:35 PM</th>\n",
              "      <th>09:55 AM</th>\n",
              "      <th>12:09 AM</th>\n",
              "      <th>Waxing Crescent</th>\n",
              "      <th>21</th>\n",
              "      <th>58.4</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1718028900</th>\n",
              "      <th>2024-06-10 18:15</th>\n",
              "      <th>23.3</th>\n",
              "      <th>73.9</th>\n",
              "      <th>Patchy light rain with thunder</th>\n",
              "      <th>16.1</th>\n",
              "      <th>25.9</th>\n",
              "      <th>340</th>\n",
              "      <th>NNW</th>\n",
              "      <th>1012.0</th>\n",
              "      <th>29.88</th>\n",
              "      <th>0.46</th>\n",
              "      <th>0.02</th>\n",
              "      <th>57</th>\n",
              "      <th>62</th>\n",
              "      <th>25.1</th>\n",
              "      <th>77.1</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>20.6</th>\n",
              "      <th>33.1</th>\n",
              "      <th>190.3</th>\n",
              "      <th>49.4</th>\n",
              "      <th>2.1</th>\n",
              "      <th>0.4</th>\n",
              "      <th>2.3</th>\n",
              "      <th>3.5</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>05:26 AM</th>\n",
              "      <th>08:35 PM</th>\n",
              "      <th>08:48 AM</th>\n",
              "      <th>No moonset</th>\n",
              "      <th>Waxing Crescent</th>\n",
              "      <th>13</th>\n",
              "      <th>46.6</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1717942500</th>\n",
              "      <th>2024-06-09 18:15</th>\n",
              "      <th>26.4</th>\n",
              "      <th>79.5</th>\n",
              "      <th>Partly cloudy</th>\n",
              "      <th>10.5</th>\n",
              "      <th>16.9</th>\n",
              "      <th>150</th>\n",
              "      <th>SSE</th>\n",
              "      <th>1009.0</th>\n",
              "      <th>29.80</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>65</th>\n",
              "      <th>25</th>\n",
              "      <th>28.3</th>\n",
              "      <th>83.0</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>5.0</th>\n",
              "      <th>15.0</th>\n",
              "      <th>24.1</th>\n",
              "      <th>185.3</th>\n",
              "      <th>48.6</th>\n",
              "      <th>3.2</th>\n",
              "      <th>0.4</th>\n",
              "      <th>1.6</th>\n",
              "      <th>2.2</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>05:26 AM</th>\n",
              "      <th>08:34 PM</th>\n",
              "      <th>07:40 AM</th>\n",
              "      <th>11:37 PM</th>\n",
              "      <th>Waxing Crescent</th>\n",
              "      <th>7</th>\n",
              "      <th>52.8</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Zimbabwe</th>\n",
              "      <th>Harare</th>\n",
              "      <th>-17.82</th>\n",
              "      <th>31.04</th>\n",
              "      <th>Africa/Harare</th>\n",
              "      <th>1718115300</th>\n",
              "      <th>2024-06-11 16:15</th>\n",
              "      <th>20.4</th>\n",
              "      <th>68.7</th>\n",
              "      <th>Sunny</th>\n",
              "      <th>7.4</th>\n",
              "      <th>11.9</th>\n",
              "      <th>77</th>\n",
              "      <th>ENE</th>\n",
              "      <th>1022.0</th>\n",
              "      <th>30.18</th>\n",
              "      <th>0.00</th>\n",
              "      <th>0.00</th>\n",
              "      <th>15</th>\n",
              "      <th>0</th>\n",
              "      <th>20.4</th>\n",
              "      <th>68.6</th>\n",
              "      <th>10.0</th>\n",
              "      <th>6.0</th>\n",
              "      <th>7.0</th>\n",
              "      <th>8.5</th>\n",
              "      <th>13.7</th>\n",
              "      <th>353.8</th>\n",
              "      <th>54.4</th>\n",
              "      <th>4.9</th>\n",
              "      <th>8.8</th>\n",
              "      <th>11.7</th>\n",
              "      <th>14.8</th>\n",
              "      <th>1</th>\n",
              "      <th>1</th>\n",
              "      <th>06:23 AM</th>\n",
              "      <th>05:28 PM</th>\n",
              "      <th>10:33 AM</th>\n",
              "      <th>10:05 PM</th>\n",
              "      <th>Waxing Crescent</th>\n",
              "      <th>21</th>\n",
              "      <th>40.8</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5453 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "P1QL40DvBV5a",
        "outputId": "b0d18e45-e72f-47ed-b721-a920bb57f0ea"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "country                         0\n",
              "location_name                   0\n",
              "latitude                        0\n",
              "longitude                       0\n",
              "timezone                        0\n",
              "last_updated_epoch              0\n",
              "last_updated                    0\n",
              "temperature_celsius             0\n",
              "temperature_fahrenheit          0\n",
              "condition_text                  0\n",
              "wind_mph                        0\n",
              "wind_kph                        0\n",
              "wind_degree                     0\n",
              "wind_direction                  0\n",
              "pressure_mb                     0\n",
              "pressure_in                     0\n",
              "precip_mm                       0\n",
              "precip_in                       0\n",
              "humidity                        0\n",
              "cloud                           0\n",
              "feels_like_celsius              0\n",
              "feels_like_fahrenheit           0\n",
              "visibility_km                   0\n",
              "visibility_miles                0\n",
              "uv_index                        0\n",
              "gust_mph                        0\n",
              "gust_kph                        0\n",
              "air_quality_Carbon_Monoxide     0\n",
              "air_quality_Ozone               0\n",
              "air_quality_Nitrogen_dioxide    0\n",
              "air_quality_Sulphur_dioxide     0\n",
              "air_quality_PM2.5               0\n",
              "air_quality_PM10                0\n",
              "air_quality_us-epa-index        0\n",
              "air_quality_gb-defra-index      0\n",
              "sunrise                         0\n",
              "sunset                          0\n",
              "moonrise                        0\n",
              "moonset                         0\n",
              "moon_phase                      0\n",
              "moon_illumination               0\n",
              "New Column                      0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>country</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>location_name</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>latitude</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>longitude</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>timezone</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>last_updated</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>temperature_celsius</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>condition_text</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>wind_mph</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>wind_kph</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>wind_degree</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>wind_direction</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pressure_mb</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pressure_in</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>precip_mm</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>precip_in</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>humidity</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cloud</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>feels_like_celsius</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>feels_like_fahrenheit</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>visibility_km</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>visibility_miles</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>uv_index</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gust_mph</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gust_kph</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_Carbon_Monoxide</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_Ozone</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_Nitrogen_dioxide</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_Sulphur_dioxide</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_PM2.5</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sunrise</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sunset</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>moonrise</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>moonset</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>moon_phase</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>moon_illumination</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>New Column</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.dropna()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 634
        },
        "id": "y3wJNlOdBwoq",
        "outputId": "6e10317f-77c8-4d40-dc04-395cbffc2135"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          country     location_name  latitude  longitude         timezone  \\\n",
              "0     Afghanistan             Kabul     34.52      69.18       Asia/Kabul   \n",
              "1         Albania            Tirana     41.33      19.82    Europe/Tirane   \n",
              "2         Algeria           Algiers     36.76       3.05   Africa/Algiers   \n",
              "3         Andorra  Andorra La Vella     42.50       1.52   Europe/Andorra   \n",
              "4          Angola            Luanda     -8.84      13.23    Africa/Luanda   \n",
              "...           ...               ...       ...        ...              ...   \n",
              "5448    Venezuela           Caracas     10.50     -66.92  America/Caracas   \n",
              "5449      Vietnam             Hanoi     21.03     105.85     Asia/Bangkok   \n",
              "5450        Yemen             Sanaa     15.35      44.21        Asia/Aden   \n",
              "5451       Zambia            Lusaka    -15.42      28.28    Africa/Lusaka   \n",
              "5452     Zimbabwe            Harare    -17.82      31.04    Africa/Harare   \n",
              "\n",
              "      last_updated_epoch      last_updated  temperature_celsius  \\\n",
              "0             1715849100  2024-05-16 13:15                 26.6   \n",
              "1             1715849100  2024-05-16 10:45                 19.0   \n",
              "2             1715849100  2024-05-16 09:45                 23.0   \n",
              "3             1715849100  2024-05-16 10:45                  6.3   \n",
              "4             1715849100  2024-05-16 09:45                 26.0   \n",
              "...                  ...               ...                  ...   \n",
              "5448          1718115300  2024-06-11 10:15                 30.3   \n",
              "5449          1718114400  2024-06-11 21:00                 30.1   \n",
              "5450          1718115300  2024-06-11 17:15                 28.0   \n",
              "5451          1718115300  2024-06-11 16:15                 20.2   \n",
              "5452          1718115300  2024-06-11 16:15                 20.4   \n",
              "\n",
              "      temperature_fahrenheit condition_text  ...  air_quality_PM10  \\\n",
              "0                       79.8  Partly Cloudy  ...              26.6   \n",
              "1                       66.2  Partly cloudy  ...               2.0   \n",
              "2                       73.4          Sunny  ...              18.4   \n",
              "3                       43.3  Light drizzle  ...               0.9   \n",
              "4                       78.8  Partly cloudy  ...             262.3   \n",
              "...                      ...            ...  ...               ...   \n",
              "5448                    86.5  Partly cloudy  ...               3.9   \n",
              "5449                    86.2  Partly cloudy  ...              67.6   \n",
              "5450                    82.5  Partly Cloudy  ...             102.4   \n",
              "5451                    68.4          Sunny  ...              12.7   \n",
              "5452                    68.7          Sunny  ...              14.8   \n",
              "\n",
              "      air_quality_us-epa-index  air_quality_gb-defra-index   sunrise  \\\n",
              "0                            1                           1  04:50 AM   \n",
              "1                            1                           1  05:21 AM   \n",
              "2                            1                           1  05:40 AM   \n",
              "3                            1                           1  06:31 AM   \n",
              "4                            5                          10  06:12 AM   \n",
              "...                        ...                         ...       ...   \n",
              "5448                         1                           1  06:05 AM   \n",
              "5449                         3                           6  05:15 AM   \n",
              "5450                         2                           3  05:32 AM   \n",
              "5451                         1                           1  06:30 AM   \n",
              "5452                         1                           1  06:23 AM   \n",
              "\n",
              "        sunset  moonrise   moonset       moon_phase  moon_illumination  \\\n",
              "0     06:50 PM  12:12 PM  01:11 AM   Waxing Gibbous                 55   \n",
              "1     07:54 PM  12:58 PM  02:14 AM   Waxing Gibbous                 55   \n",
              "2     07:50 PM  01:15 PM  02:14 AM   Waxing Gibbous                 55   \n",
              "3     09:11 PM  02:12 PM  03:31 AM   Waxing Gibbous                 55   \n",
              "4     05:55 PM  01:17 PM  12:38 AM   Waxing Gibbous                 55   \n",
              "...        ...       ...       ...              ...                ...   \n",
              "5448  06:49 PM  10:37 AM  11:24 PM  Waxing Crescent                 21   \n",
              "5449  06:38 PM  09:25 AM  10:49 PM  Waxing Crescent                 21   \n",
              "5450  06:34 PM  09:50 AM  10:53 PM  Waxing Crescent                 21   \n",
              "5451  05:44 PM  10:41 AM  10:20 PM  Waxing Crescent                 21   \n",
              "5452  05:28 PM  10:33 AM  10:05 PM  Waxing Crescent                 21   \n",
              "\n",
              "      New Column  \n",
              "0           53.2  \n",
              "1           38.0  \n",
              "2           46.0  \n",
              "3           12.6  \n",
              "4           52.0  \n",
              "...          ...  \n",
              "5448        60.6  \n",
              "5449        60.2  \n",
              "5450        56.0  \n",
              "5451        40.4  \n",
              "5452        40.8  \n",
              "\n",
              "[5453 rows x 42 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4ae7d791-9a75-4493-935f-9e4bb7a5d584\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>location_name</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>timezone</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>condition_text</th>\n",
              "      <th>...</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>sunrise</th>\n",
              "      <th>sunset</th>\n",
              "      <th>moonrise</th>\n",
              "      <th>moonset</th>\n",
              "      <th>moon_phase</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>Kabul</td>\n",
              "      <td>34.52</td>\n",
              "      <td>69.18</td>\n",
              "      <td>Asia/Kabul</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 13:15</td>\n",
              "      <td>26.6</td>\n",
              "      <td>79.8</td>\n",
              "      <td>Partly Cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>26.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>04:50 AM</td>\n",
              "      <td>06:50 PM</td>\n",
              "      <td>12:12 PM</td>\n",
              "      <td>01:11 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>53.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>41.33</td>\n",
              "      <td>19.82</td>\n",
              "      <td>Europe/Tirane</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>19.0</td>\n",
              "      <td>66.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:21 AM</td>\n",
              "      <td>07:54 PM</td>\n",
              "      <td>12:58 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>Algiers</td>\n",
              "      <td>36.76</td>\n",
              "      <td>3.05</td>\n",
              "      <td>Africa/Algiers</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>23.0</td>\n",
              "      <td>73.4</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>18.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:40 AM</td>\n",
              "      <td>07:50 PM</td>\n",
              "      <td>01:15 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>46.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andorra</td>\n",
              "      <td>Andorra La Vella</td>\n",
              "      <td>42.50</td>\n",
              "      <td>1.52</td>\n",
              "      <td>Europe/Andorra</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>6.3</td>\n",
              "      <td>43.3</td>\n",
              "      <td>Light drizzle</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:31 AM</td>\n",
              "      <td>09:11 PM</td>\n",
              "      <td>02:12 PM</td>\n",
              "      <td>03:31 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>12.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>Luanda</td>\n",
              "      <td>-8.84</td>\n",
              "      <td>13.23</td>\n",
              "      <td>Africa/Luanda</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>262.3</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>06:12 AM</td>\n",
              "      <td>05:55 PM</td>\n",
              "      <td>01:17 PM</td>\n",
              "      <td>12:38 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5448</th>\n",
              "      <td>Venezuela</td>\n",
              "      <td>Caracas</td>\n",
              "      <td>10.50</td>\n",
              "      <td>-66.92</td>\n",
              "      <td>America/Caracas</td>\n",
              "      <td>1718115300</td>\n",
              "      <td>2024-06-11 10:15</td>\n",
              "      <td>30.3</td>\n",
              "      <td>86.5</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:05 AM</td>\n",
              "      <td>06:49 PM</td>\n",
              "      <td>10:37 AM</td>\n",
              "      <td>11:24 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>21</td>\n",
              "      <td>60.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5449</th>\n",
              "      <td>Vietnam</td>\n",
              "      <td>Hanoi</td>\n",
              "      <td>21.03</td>\n",
              "      <td>105.85</td>\n",
              "      <td>Asia/Bangkok</td>\n",
              "      <td>1718114400</td>\n",
              "      <td>2024-06-11 21:00</td>\n",
              "      <td>30.1</td>\n",
              "      <td>86.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>67.6</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>05:15 AM</td>\n",
              "      <td>06:38 PM</td>\n",
              "      <td>09:25 AM</td>\n",
              "      <td>10:49 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>21</td>\n",
              "      <td>60.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5450</th>\n",
              "      <td>Yemen</td>\n",
              "      <td>Sanaa</td>\n",
              "      <td>15.35</td>\n",
              "      <td>44.21</td>\n",
              "      <td>Asia/Aden</td>\n",
              "      <td>1718115300</td>\n",
              "      <td>2024-06-11 17:15</td>\n",
              "      <td>28.0</td>\n",
              "      <td>82.5</td>\n",
              "      <td>Partly Cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>102.4</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>05:32 AM</td>\n",
              "      <td>06:34 PM</td>\n",
              "      <td>09:50 AM</td>\n",
              "      <td>10:53 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>21</td>\n",
              "      <td>56.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5451</th>\n",
              "      <td>Zambia</td>\n",
              "      <td>Lusaka</td>\n",
              "      <td>-15.42</td>\n",
              "      <td>28.28</td>\n",
              "      <td>Africa/Lusaka</td>\n",
              "      <td>1718115300</td>\n",
              "      <td>2024-06-11 16:15</td>\n",
              "      <td>20.2</td>\n",
              "      <td>68.4</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>12.7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:30 AM</td>\n",
              "      <td>05:44 PM</td>\n",
              "      <td>10:41 AM</td>\n",
              "      <td>10:20 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>21</td>\n",
              "      <td>40.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5452</th>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>Harare</td>\n",
              "      <td>-17.82</td>\n",
              "      <td>31.04</td>\n",
              "      <td>Africa/Harare</td>\n",
              "      <td>1718115300</td>\n",
              "      <td>2024-06-11 16:15</td>\n",
              "      <td>20.4</td>\n",
              "      <td>68.7</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>14.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:23 AM</td>\n",
              "      <td>05:28 PM</td>\n",
              "      <td>10:33 AM</td>\n",
              "      <td>10:05 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>21</td>\n",
              "      <td>40.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5453 rows × 42 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ae7d791-9a75-4493-935f-9e4bb7a5d584')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4ae7d791-9a75-4493-935f-9e4bb7a5d584 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4ae7d791-9a75-4493-935f-9e4bb7a5d584');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-32f03668-4149-4727-bf6e-245287cad51d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32f03668-4149-4727-bf6e-245287cad51d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-32f03668-4149-4727-bf6e-245287cad51d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['New Column']=data['temperature_celsius'].apply(lambda x:x*2)"
      ],
      "metadata": {
        "id": "txD0Yu1QCTuC"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 620
        },
        "id": "V1Svr5l1ELhK",
        "outputId": "bf5c2cf9-a8c4-48ef-bbda-e6e626a6ffcf"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               country     location_name  latitude  longitude  \\\n",
              "0          Afghanistan             Kabul     34.52      69.18   \n",
              "1              Albania            Tirana     41.33      19.82   \n",
              "2              Algeria           Algiers     36.76       3.05   \n",
              "3              Andorra  Andorra La Vella     42.50       1.52   \n",
              "4               Angola            Luanda     -8.84      13.23   \n",
              "5  Antigua and Barbuda      Saint John's     17.12     -61.85   \n",
              "6            Argentina      Buenos Aires    -34.59     -58.67   \n",
              "7              Armenia           Yerevan     40.18      44.51   \n",
              "8            Australia          Canberra    -35.28     149.22   \n",
              "9              Austria            Vienna     48.20      16.37   \n",
              "\n",
              "                         timezone  last_updated_epoch      last_updated  \\\n",
              "0                      Asia/Kabul          1715849100  2024-05-16 13:15   \n",
              "1                   Europe/Tirane          1715849100  2024-05-16 10:45   \n",
              "2                  Africa/Algiers          1715849100  2024-05-16 09:45   \n",
              "3                  Europe/Andorra          1715849100  2024-05-16 10:45   \n",
              "4                   Africa/Luanda          1715849100  2024-05-16 09:45   \n",
              "5                 America/Antigua          1715849100  2024-05-16 04:45   \n",
              "6  America/Argentina/Buenos_Aires          1715849100  2024-05-16 05:45   \n",
              "7                    Asia/Yerevan          1715849100  2024-05-16 12:45   \n",
              "8                Australia/Sydney          1715849100  2024-05-16 18:45   \n",
              "9                   Europe/Vienna          1715849100  2024-05-16 10:45   \n",
              "\n",
              "   temperature_celsius  temperature_fahrenheit condition_text  ...  \\\n",
              "0                 26.6                    79.8  Partly Cloudy  ...   \n",
              "1                 19.0                    66.2  Partly cloudy  ...   \n",
              "2                 23.0                    73.4          Sunny  ...   \n",
              "3                  6.3                    43.3  Light drizzle  ...   \n",
              "4                 26.0                    78.8  Partly cloudy  ...   \n",
              "5                 26.0                    78.8  Partly cloudy  ...   \n",
              "6                  8.0                    46.4          Clear  ...   \n",
              "7                 19.0                    66.2  Partly cloudy  ...   \n",
              "8                  9.0                    48.2          Clear  ...   \n",
              "9                 16.0                    60.8  Partly cloudy  ...   \n",
              "\n",
              "   air_quality_PM10  air_quality_us-epa-index  air_quality_gb-defra-index  \\\n",
              "0              26.6                         1                           1   \n",
              "1               2.0                         1                           1   \n",
              "2              18.4                         1                           1   \n",
              "3               0.9                         1                           1   \n",
              "4             262.3                         5                          10   \n",
              "5               4.5                         1                           1   \n",
              "6               5.3                         1                           1   \n",
              "7               0.9                         1                           1   \n",
              "8               5.4                         1                           1   \n",
              "9               4.4                         1                           1   \n",
              "\n",
              "    sunrise    sunset  moonrise     moonset      moon_phase  \\\n",
              "0  04:50 AM  06:50 PM  12:12 PM    01:11 AM  Waxing Gibbous   \n",
              "1  05:21 AM  07:54 PM  12:58 PM    02:14 AM  Waxing Gibbous   \n",
              "2  05:40 AM  07:50 PM  01:15 PM    02:14 AM  Waxing Gibbous   \n",
              "3  06:31 AM  09:11 PM  02:12 PM    03:31 AM  Waxing Gibbous   \n",
              "4  06:12 AM  05:55 PM  01:17 PM    12:38 AM  Waxing Gibbous   \n",
              "5  05:36 AM  06:32 PM  01:05 PM    01:14 AM  Waxing Gibbous   \n",
              "6  07:43 AM  05:59 PM  02:36 PM    01:04 AM  Waxing Gibbous   \n",
              "7  05:45 AM  08:12 PM  01:17 PM    02:31 AM  Waxing Gibbous   \n",
              "8  06:52 AM  05:07 PM  01:31 PM  No moonset  Waxing Gibbous   \n",
              "9  05:14 AM  08:29 PM  01:00 PM    02:42 AM  Waxing Gibbous   \n",
              "\n",
              "   moon_illumination  New Column  \n",
              "0                 55        53.2  \n",
              "1                 55        38.0  \n",
              "2                 55        46.0  \n",
              "3                 55        12.6  \n",
              "4                 55        52.0  \n",
              "5                 55        52.0  \n",
              "6                 55        16.0  \n",
              "7                 55        38.0  \n",
              "8                 55        18.0  \n",
              "9                 55        32.0  \n",
              "\n",
              "[10 rows x 42 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a90fc0f1-a4c3-400e-8700-39cbb0c85976\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>location_name</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>timezone</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>condition_text</th>\n",
              "      <th>...</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>sunrise</th>\n",
              "      <th>sunset</th>\n",
              "      <th>moonrise</th>\n",
              "      <th>moonset</th>\n",
              "      <th>moon_phase</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>Kabul</td>\n",
              "      <td>34.52</td>\n",
              "      <td>69.18</td>\n",
              "      <td>Asia/Kabul</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 13:15</td>\n",
              "      <td>26.6</td>\n",
              "      <td>79.8</td>\n",
              "      <td>Partly Cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>26.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>04:50 AM</td>\n",
              "      <td>06:50 PM</td>\n",
              "      <td>12:12 PM</td>\n",
              "      <td>01:11 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>53.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>41.33</td>\n",
              "      <td>19.82</td>\n",
              "      <td>Europe/Tirane</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>19.0</td>\n",
              "      <td>66.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:21 AM</td>\n",
              "      <td>07:54 PM</td>\n",
              "      <td>12:58 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>Algiers</td>\n",
              "      <td>36.76</td>\n",
              "      <td>3.05</td>\n",
              "      <td>Africa/Algiers</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>23.0</td>\n",
              "      <td>73.4</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>18.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:40 AM</td>\n",
              "      <td>07:50 PM</td>\n",
              "      <td>01:15 PM</td>\n",
              "      <td>02:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>46.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andorra</td>\n",
              "      <td>Andorra La Vella</td>\n",
              "      <td>42.50</td>\n",
              "      <td>1.52</td>\n",
              "      <td>Europe/Andorra</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>6.3</td>\n",
              "      <td>43.3</td>\n",
              "      <td>Light drizzle</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:31 AM</td>\n",
              "      <td>09:11 PM</td>\n",
              "      <td>02:12 PM</td>\n",
              "      <td>03:31 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>12.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>Luanda</td>\n",
              "      <td>-8.84</td>\n",
              "      <td>13.23</td>\n",
              "      <td>Africa/Luanda</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 09:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>262.3</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>06:12 AM</td>\n",
              "      <td>05:55 PM</td>\n",
              "      <td>01:17 PM</td>\n",
              "      <td>12:38 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>Saint John's</td>\n",
              "      <td>17.12</td>\n",
              "      <td>-61.85</td>\n",
              "      <td>America/Antigua</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 04:45</td>\n",
              "      <td>26.0</td>\n",
              "      <td>78.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:36 AM</td>\n",
              "      <td>06:32 PM</td>\n",
              "      <td>01:05 PM</td>\n",
              "      <td>01:14 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>Buenos Aires</td>\n",
              "      <td>-34.59</td>\n",
              "      <td>-58.67</td>\n",
              "      <td>America/Argentina/Buenos_Aires</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 05:45</td>\n",
              "      <td>8.0</td>\n",
              "      <td>46.4</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>07:43 AM</td>\n",
              "      <td>05:59 PM</td>\n",
              "      <td>02:36 PM</td>\n",
              "      <td>01:04 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>16.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>Yerevan</td>\n",
              "      <td>40.18</td>\n",
              "      <td>44.51</td>\n",
              "      <td>Asia/Yerevan</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 12:45</td>\n",
              "      <td>19.0</td>\n",
              "      <td>66.2</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:45 AM</td>\n",
              "      <td>08:12 PM</td>\n",
              "      <td>01:17 PM</td>\n",
              "      <td>02:31 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 18:45</td>\n",
              "      <td>9.0</td>\n",
              "      <td>48.2</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:52 AM</td>\n",
              "      <td>05:07 PM</td>\n",
              "      <td>01:31 PM</td>\n",
              "      <td>No moonset</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>18.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Austria</td>\n",
              "      <td>Vienna</td>\n",
              "      <td>48.20</td>\n",
              "      <td>16.37</td>\n",
              "      <td>Europe/Vienna</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 10:45</td>\n",
              "      <td>16.0</td>\n",
              "      <td>60.8</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>4.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>05:14 AM</td>\n",
              "      <td>08:29 PM</td>\n",
              "      <td>01:00 PM</td>\n",
              "      <td>02:42 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>32.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 42 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a90fc0f1-a4c3-400e-8700-39cbb0c85976')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a90fc0f1-a4c3-400e-8700-39cbb0c85976 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a90fc0f1-a4c3-400e-8700-39cbb0c85976');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-05cc8b17-fe03-418d-a58a-c461be842405\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05cc8b17-fe03-418d-a58a-c461be842405')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-05cc8b17-fe03-418d-a58a-c461be842405 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.sort_values(by=\"temperature_celsius\",ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 634
        },
        "id": "LPpThTVTEgSa",
        "outputId": "41f6da62-586e-4d87-d21c-4dae568b8dfa"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        country location_name  latitude  longitude          timezone  \\\n",
              "4568     Kuwait   Kuwait City     29.37      47.96       Asia/Kuwait   \n",
              "4373     Kuwait   Kuwait City     29.37      47.96       Asia/Kuwait   \n",
              "3205     Kuwait   Kuwait City     29.37      47.96       Asia/Kuwait   \n",
              "3010     Kuwait   Kuwait City     29.37      47.96       Asia/Kuwait   \n",
              "4753       Iraq       Baghdad     33.34      44.39      Asia/Baghdad   \n",
              "...         ...           ...       ...        ...               ...   \n",
              "35        Chile      Santiago    -33.45     -70.67  America/Santiago   \n",
              "1564  Australia      Canberra    -35.28     149.22  Australia/Sydney   \n",
              "2539  Australia      Canberra    -35.28     149.22  Australia/Sydney   \n",
              "2344  Australia      Canberra    -35.28     149.22  Australia/Sydney   \n",
              "784   Australia      Canberra    -35.28     149.22  Australia/Sydney   \n",
              "\n",
              "      last_updated_epoch      last_updated  temperature_celsius  \\\n",
              "4568          1717768800  2024-06-07 17:00                 46.6   \n",
              "4373          1717682400  2024-06-06 17:00                 45.9   \n",
              "3205          1717164900  2024-05-31 17:15                 45.7   \n",
              "3010          1717076700  2024-05-30 16:45                 45.6   \n",
              "4753          1717856100  2024-06-08 17:15                 45.4   \n",
              "...                  ...               ...                  ...   \n",
              "35            1715849100  2024-05-16 04:45                  1.0   \n",
              "1564          1716472800  2024-05-24 00:00                  1.0   \n",
              "2539          1716906600  2024-05-29 00:30                  0.0   \n",
              "2344          1716820200  2024-05-28 00:30                  0.0   \n",
              "784           1716127200  2024-05-20 00:00                 -1.0   \n",
              "\n",
              "      temperature_fahrenheit condition_text  ...  air_quality_PM10  \\\n",
              "4568                   115.9  Partly cloudy  ...              66.1   \n",
              "4373                   114.6          Sunny  ...             280.4   \n",
              "3205                   114.3          Sunny  ...             148.4   \n",
              "3010                   114.1          Sunny  ...             123.7   \n",
              "4753                   113.7          Sunny  ...              37.5   \n",
              "...                      ...            ...  ...               ...   \n",
              "35                      33.8          Clear  ...             268.6   \n",
              "1564                    33.8          Clear  ...              26.3   \n",
              "2539                    32.0          Clear  ...              23.5   \n",
              "2344                    32.0          Clear  ...              23.8   \n",
              "784                     30.2          Clear  ...               7.3   \n",
              "\n",
              "      air_quality_us-epa-index  air_quality_gb-defra-index   sunrise  \\\n",
              "4568                         2                           2  04:48 AM   \n",
              "4373                         3                           5  04:48 AM   \n",
              "3205                         2                           4  04:49 AM   \n",
              "3010                         2                           3  04:49 AM   \n",
              "4753                         1                           2  04:52 AM   \n",
              "...                        ...                         ...       ...   \n",
              "35                           5                          10  07:28 AM   \n",
              "1564                         2                           2  06:57 AM   \n",
              "2539                         2                           2  07:01 AM   \n",
              "2344                         2                           2  07:00 AM   \n",
              "784                          1                           1  06:54 AM   \n",
              "\n",
              "        sunset     moonrise   moonset       moon_phase  moon_illumination  \\\n",
              "4568  06:46 PM     05:08 AM  08:03 PM  Waxing Crescent                  0   \n",
              "4373  06:46 PM     04:14 AM  07:00 PM         New Moon                  0   \n",
              "3205  06:43 PM     12:33 AM  12:19 PM  Waning Crescent                 47   \n",
              "3010  06:42 PM  No moonrise  11:15 AM     Last Quarter                 58   \n",
              "4753  07:11 PM     06:09 AM  09:26 PM  Waxing Crescent                  3   \n",
              "...        ...          ...       ...              ...                ...   \n",
              "35    05:50 PM     02:23 PM  12:56 AM   Waxing Gibbous                 55   \n",
              "1564  05:02 PM     04:30 PM  06:26 AM        Full Moon                100   \n",
              "2539  05:00 PM     09:18 PM  11:17 AM   Waning Gibbous                 79   \n",
              "2344  05:01 PM     08:07 PM  10:30 AM   Waning Gibbous                 87   \n",
              "784   05:05 PM     02:39 PM  02:28 AM   Waxing Gibbous                 81   \n",
              "\n",
              "      New Column  \n",
              "4568        93.2  \n",
              "4373        91.8  \n",
              "3205        91.4  \n",
              "3010        91.2  \n",
              "4753        90.8  \n",
              "...          ...  \n",
              "35           2.0  \n",
              "1564         2.0  \n",
              "2539         0.0  \n",
              "2344         0.0  \n",
              "784         -2.0  \n",
              "\n",
              "[5453 rows x 42 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e25b923-1beb-4ed8-8986-419a64d00d5a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>location_name</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>timezone</th>\n",
              "      <th>last_updated_epoch</th>\n",
              "      <th>last_updated</th>\n",
              "      <th>temperature_celsius</th>\n",
              "      <th>temperature_fahrenheit</th>\n",
              "      <th>condition_text</th>\n",
              "      <th>...</th>\n",
              "      <th>air_quality_PM10</th>\n",
              "      <th>air_quality_us-epa-index</th>\n",
              "      <th>air_quality_gb-defra-index</th>\n",
              "      <th>sunrise</th>\n",
              "      <th>sunset</th>\n",
              "      <th>moonrise</th>\n",
              "      <th>moonset</th>\n",
              "      <th>moon_phase</th>\n",
              "      <th>moon_illumination</th>\n",
              "      <th>New Column</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4568</th>\n",
              "      <td>Kuwait</td>\n",
              "      <td>Kuwait City</td>\n",
              "      <td>29.37</td>\n",
              "      <td>47.96</td>\n",
              "      <td>Asia/Kuwait</td>\n",
              "      <td>1717768800</td>\n",
              "      <td>2024-06-07 17:00</td>\n",
              "      <td>46.6</td>\n",
              "      <td>115.9</td>\n",
              "      <td>Partly cloudy</td>\n",
              "      <td>...</td>\n",
              "      <td>66.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>04:48 AM</td>\n",
              "      <td>06:46 PM</td>\n",
              "      <td>05:08 AM</td>\n",
              "      <td>08:03 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>0</td>\n",
              "      <td>93.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4373</th>\n",
              "      <td>Kuwait</td>\n",
              "      <td>Kuwait City</td>\n",
              "      <td>29.37</td>\n",
              "      <td>47.96</td>\n",
              "      <td>Asia/Kuwait</td>\n",
              "      <td>1717682400</td>\n",
              "      <td>2024-06-06 17:00</td>\n",
              "      <td>45.9</td>\n",
              "      <td>114.6</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>280.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>04:48 AM</td>\n",
              "      <td>06:46 PM</td>\n",
              "      <td>04:14 AM</td>\n",
              "      <td>07:00 PM</td>\n",
              "      <td>New Moon</td>\n",
              "      <td>0</td>\n",
              "      <td>91.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3205</th>\n",
              "      <td>Kuwait</td>\n",
              "      <td>Kuwait City</td>\n",
              "      <td>29.37</td>\n",
              "      <td>47.96</td>\n",
              "      <td>Asia/Kuwait</td>\n",
              "      <td>1717164900</td>\n",
              "      <td>2024-05-31 17:15</td>\n",
              "      <td>45.7</td>\n",
              "      <td>114.3</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>148.4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>04:49 AM</td>\n",
              "      <td>06:43 PM</td>\n",
              "      <td>12:33 AM</td>\n",
              "      <td>12:19 PM</td>\n",
              "      <td>Waning Crescent</td>\n",
              "      <td>47</td>\n",
              "      <td>91.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3010</th>\n",
              "      <td>Kuwait</td>\n",
              "      <td>Kuwait City</td>\n",
              "      <td>29.37</td>\n",
              "      <td>47.96</td>\n",
              "      <td>Asia/Kuwait</td>\n",
              "      <td>1717076700</td>\n",
              "      <td>2024-05-30 16:45</td>\n",
              "      <td>45.6</td>\n",
              "      <td>114.1</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>123.7</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>04:49 AM</td>\n",
              "      <td>06:42 PM</td>\n",
              "      <td>No moonrise</td>\n",
              "      <td>11:15 AM</td>\n",
              "      <td>Last Quarter</td>\n",
              "      <td>58</td>\n",
              "      <td>91.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4753</th>\n",
              "      <td>Iraq</td>\n",
              "      <td>Baghdad</td>\n",
              "      <td>33.34</td>\n",
              "      <td>44.39</td>\n",
              "      <td>Asia/Baghdad</td>\n",
              "      <td>1717856100</td>\n",
              "      <td>2024-06-08 17:15</td>\n",
              "      <td>45.4</td>\n",
              "      <td>113.7</td>\n",
              "      <td>Sunny</td>\n",
              "      <td>...</td>\n",
              "      <td>37.5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>04:52 AM</td>\n",
              "      <td>07:11 PM</td>\n",
              "      <td>06:09 AM</td>\n",
              "      <td>09:26 PM</td>\n",
              "      <td>Waxing Crescent</td>\n",
              "      <td>3</td>\n",
              "      <td>90.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Chile</td>\n",
              "      <td>Santiago</td>\n",
              "      <td>-33.45</td>\n",
              "      <td>-70.67</td>\n",
              "      <td>America/Santiago</td>\n",
              "      <td>1715849100</td>\n",
              "      <td>2024-05-16 04:45</td>\n",
              "      <td>1.0</td>\n",
              "      <td>33.8</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>268.6</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>07:28 AM</td>\n",
              "      <td>05:50 PM</td>\n",
              "      <td>02:23 PM</td>\n",
              "      <td>12:56 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>55</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1564</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1716472800</td>\n",
              "      <td>2024-05-24 00:00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>33.8</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>26.3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>06:57 AM</td>\n",
              "      <td>05:02 PM</td>\n",
              "      <td>04:30 PM</td>\n",
              "      <td>06:26 AM</td>\n",
              "      <td>Full Moon</td>\n",
              "      <td>100</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2539</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1716906600</td>\n",
              "      <td>2024-05-29 00:30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>23.5</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>07:01 AM</td>\n",
              "      <td>05:00 PM</td>\n",
              "      <td>09:18 PM</td>\n",
              "      <td>11:17 AM</td>\n",
              "      <td>Waning Gibbous</td>\n",
              "      <td>79</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2344</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1716820200</td>\n",
              "      <td>2024-05-28 00:30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>23.8</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>07:00 AM</td>\n",
              "      <td>05:01 PM</td>\n",
              "      <td>08:07 PM</td>\n",
              "      <td>10:30 AM</td>\n",
              "      <td>Waning Gibbous</td>\n",
              "      <td>87</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>784</th>\n",
              "      <td>Australia</td>\n",
              "      <td>Canberra</td>\n",
              "      <td>-35.28</td>\n",
              "      <td>149.22</td>\n",
              "      <td>Australia/Sydney</td>\n",
              "      <td>1716127200</td>\n",
              "      <td>2024-05-20 00:00</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>30.2</td>\n",
              "      <td>Clear</td>\n",
              "      <td>...</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>06:54 AM</td>\n",
              "      <td>05:05 PM</td>\n",
              "      <td>02:39 PM</td>\n",
              "      <td>02:28 AM</td>\n",
              "      <td>Waxing Gibbous</td>\n",
              "      <td>81</td>\n",
              "      <td>-2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5453 rows × 42 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e25b923-1beb-4ed8-8986-419a64d00d5a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e25b923-1beb-4ed8-8986-419a64d00d5a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e25b923-1beb-4ed8-8986-419a64d00d5a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c435155c-0c3f-4e0e-ac93-a92502bb8fd5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c435155c-0c3f-4e0e-ac93-a92502bb8fd5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c435155c-0c3f-4e0e-ac93-a92502bb8fd5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "np.mean(data[\"temperature_celsius\"])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PWxU37KMEy9K",
        "outputId": "2b92b3cf-859f-448a-aed2-3c366afdbcc7"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "25.579002384008806"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "np.median(data[\"temperature_celsius\"])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8p96tiTpFQr6",
        "outputId": "ee3c8840-789f-454c-d9b7-d9951abe9ca6"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "26.0"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "iDIstLPsFwfP"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,5))\n",
        "sns.countplot(x=\"temperature_fahrenheit\",data=data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "wk9zY_DBF4_N",
        "outputId": "d0dd36ba-9361-4c90-87a2-6f2ceccd7374"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='temperature_fahrenheit', ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(x=\"temperature_fahrenheit\",data=data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "2MZfPIwlH1nY",
        "outputId": "54239cf7-25f8-45f8-ae4c-27f9eaf42094"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='temperature_fahrenheit'>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,5))\n",
        "sns.distplot(data[\"temperature_fahrenheit\"])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 673
        },
        "id": "k6q0Cf2FJwGb",
        "outputId": "64a780c3-f1e2-4f70-9828-a0410eba8bee"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-56-80f94e0386fc>:2: UserWarning: \n",
            "\n",
            "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
            "\n",
            "Please adapt your code to use either `displot` (a figure-level function with\n",
            "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n",
            "For a guide to updating your code to use the new functions, please see\n",
            "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
            "\n",
            "  sns.distplot(data[\"temperature_fahrenheit\"])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='temperature_fahrenheit', ylabel='Density'>"
            ]
          },
          "metadata": {},
          "execution_count": 56
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(x='temperature_celsius',y=\"latitude\",data=data)\n",
        "plt.title(\"Temperature In Each latitude\")\n",
        "plt.xlabel(\"celsius\")\n",
        "plt.ylabel(\"latitude\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "y2Xiry6UKm4T",
        "outputId": "5ccd0971-10e4-41e5-c9b3-f68c2fb515e8"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "data=pd.read_csv('/weather.csv')\n",
        "sns.lineplot(x='temperature_celsius',y=\"latitude\",data=data,marker='o',label='temperature',color='blue')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "RHZAk1gPNKqu",
        "outputId": "a633fa04-46dc-431e-a030-18de6cf362e9"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='temperature_celsius', ylabel='latitude'>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(x='temperature_celsius',y=\"latitude\",data=data ,s=100,color='red')\n",
        "plt.xlabel(\"celsius\")\n",
        "plt.ylabel(\"latitude\")\n",
        "plt.title(\"Temperature\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 626
        },
        "id": "bEeraldMh6pm",
        "outputId": "60342eed-adcc-4ab3-b463-d9f0a6e1b131"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'plt' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-8-abc96f304fbc>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatterplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'temperature_celsius'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"latitude\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;34m,\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'red'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"celsius\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"latitude\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Temperature\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}